/* repo: webmd-xdm/HEAD@e4a7825 - Package Version: 1.3.0 - 2019-04-10 11:55 am - User:  */
var webmd;webmd=webmd||{},webmd.xdm={timeoutInit:1e4,timeoutCall:15e3,cachedCalls:{},callId:0,receiverUrl:"https://www.webmd.com/xdm",whitelist:[],services:{},requireSSL:!0,call:function(a){var b,c;return c=this,a=$.extend({timeout:c.timeoutCall},a),b=a.deferred=$.Deferred(),a.timer=setTimeout(function(){b.reject({status:"timeout",msg:"Timeout making the xdm service call "+a.service})},a.timeout),c.callerInit().fail(function(a){b.reject(a)}).done(function(){var b,d,e,f;b=++c.callId,c.cachedCalls[b]=a,d={id:b,service:a.service,data:a.data,headers:a.headers},e="";try{e=JSON.stringify(d)}catch(a){}e&&(f=c.iframe[0].contentWindow,f.postMessage(e,c.receiverUrl))}),b.promise()},callerInit:function(){var a,b;return b=this,b.deferredCallerInit?b.deferredCallerInit.promise():(a=b.deferredCallerInit=$.Deferred(),window.postMessage?($(window).on("message",function(a){b.callerProcessResponse(a.originalEvent)}),b.timerInit=setTimeout(function(){a.reject({status:"timeout",msg:"Cross-domain iframe timed out before sending ready response"})},b.timeoutInit),b.iframe=$("<iframe/>").attr({frameborder:"0",height:"1",marginheight:"0",marginwidth:"0",scrolling:"no",src:b.receiverUrl,style:"display:none",width:1}).appendTo("body"),a.promise()):(a.reject({status:"unsupported",msg:"postMessage is not supported in this browser"}),a.promise()))},callerProcessResponse:function(a){var b,c;if(0===this.receiverUrl.indexOf(a.origin)){c={};try{c=JSON.parse(a.data)}catch(a){}if("init"===c.status)return clearTimeout(this.timerInit),void this.deferredCallerInit.resolve();b=this.cachedCalls[c.id],b&&(delete this.cachedCalls[c.id],clearTimeout(b.timer),"success"===c.status?b.deferred.resolve(c.data):b.deferred.reject(c))}},receiverInit:function(){var a;a=this,$(window).on("message",function(b){a.receiverProcessRequest(b.originalEvent)}),this.receiverSendResponse({status:"init"})},receiverProcessRequest:function(a){var b,c,d,e;return d=this,c=JSON.parse(a.data),d.receiverIsWhitelisted(a)?d.requireSSL&&"https:"!==window.location.protocol?void d.receiverSendResponse({id:c.id,status:"forbidden",msg:"Access forbidden because receiver page is not HTTPS "+a.origin,data:{}},a):(e=d.services[c.service])?(b=$.extend({data:c.data,headers:c.headers},e),void $.ajax(b).done(function(b){d.receiverSendResponse({id:c.id,status:"success",data:b},a)}).fail(function(b,e,f){d.receiverSendResponse({id:c.id,status:e,http:b.status,msg:f,data:b.responseText},a)})):void d.receiverSendResponse({id:c.id,status:"forbidden",msg:"Access forbidden for service "+c.service,data:{}},a):void d.receiverSendResponse({id:c.id,status:"forbidden",msg:"Access forbidden for domain "+a.origin,data:{}},a)},receiverSendResponse:function(a,b){var c;b=$.extend({source:window.parent,origin:document.referrer},b),c="";try{c=JSON.stringify(a)}catch(a){}c&&b.source.postMessage(c,b.origin)},receiverIsWhitelisted:function(a){var b,c,d;if(d=this,c=a.origin)for(b=0;b<d.whitelist.length;b++)if(c.match(d.whitelist[b]))return!0;return!1}},window.define&&window.define.amd&&define(webmd.xdm);
//# sourceMappingURL=webmd-xdm.js.map